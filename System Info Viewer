import platform
import psutil
import socket
import datetime
import os

# Get basic system info
def get_system_info():
    print("\n=== SYSTEM DETAILS ===")
    print(f"System: {platform.system()}")
    print(f"Computer Name: {platform.node()}")
    print(f"OS Version: {platform.version()}")
    print(f"Release: {platform.release()}")
    print(f"Machine Type: {platform.machine()}")
    print(f"Processor: {platform.processor()}")
    print(f"Architecture: {platform.architecture()[0]}")
    try:
        print(f"Username: {os.getlogin()}")
    except:
        print("Username: Not Available")
    print(f"IP Address: {socket.gethostbyname(socket.gethostname())}")

# Check when system was last restarted
def get_boot_time():
    print("\n=== BOOT TIME ===")
    boot_time = datetime.datetime.fromtimestamp(psutil.boot_time())
    print(f"Last Restart: {boot_time.strftime('%A, %d %B %Y at %I:%M %p')}")

# CPU specs and usage
def get_cpu_info():
    print("\n=== CPU INFO ===")
    print(f"Physical Cores: {psutil.cpu_count(logical=False)}")
    print(f"Total Cores: {psutil.cpu_count(logical=True)}")
    print(f"Current Frequency: {psutil.cpu_freq().current:.2f} MHz")

    print("Core Usage:")
    for i, usage in enumerate(psutil.cpu_percent(percpu=True, interval=1)):
        print(f"  Core {i+1}: {usage}%")

    print(f"Total CPU Usage: {psutil.cpu_percent()}%")

# RAM stats
def get_memory_info():
    print("\n=== MEMORY INFO ===")
    memory = psutil.virtual_memory()
    print(f"Total: {format_bytes(memory.total)}")
    print(f"Used: {format_bytes(memory.used)}")
    print(f"Available: {format_bytes(memory.available)}")
    print(f"Usage: {memory.percent}%")

# Disk usage across all drives/partitions
def get_disk_info():
    print("\n=== DISK INFO ===")
    for part in psutil.disk_partitions():
        print(f"Drive: {part.device} ({part.mountpoint})")
        try:
            usage = psutil.disk_usage(part.mountpoint)
            print(f"  Total Size: {format_bytes(usage.total)}")
            print(f"  Used: {format_bytes(usage.used)}")
            print(f"  Free: {format_bytes(usage.free)}")
            print(f"  Usage: {usage.percent}%")
        except:
            print("  Unable to access this drive.")

# Convert bytes to readable format (KB, MB, GB, etc.)
def format_bytes(size):
    for unit in ["B", "KB", "MB", "GB", "TB"]:
        if size < 1024:
            return f"{size:.2f} {unit}"
        size /= 1024

# Run the checks
get_system_info()
get_boot_time()
get_cpu_info()
get_memory_info()
get_disk_info()